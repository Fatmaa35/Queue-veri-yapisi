public class Main {

    public static void main(String[] args) {
        Kuyruk k = new Kuyruk(); // Yeni kuyruk nesnesi oluÅŸturuyoruz

        if (k.bosmu()) {
            System.out.println("Kuyruk boÅŸ!");
        }

        k.ekle(49);
        k.ekle(100);

        System.out.println("Kuyruktan Ã§Ä±kan: " + k.cikar());

        k.ekle(44);
        k.ekle(22);

        System.out.println("Kuyruktan Ã§Ä±kan: " + k.cikar());
        System.out.println("Kuyruktan Ã§Ä±kan: " + k.cikar());
        System.out.println("Kuyruktan Ã§Ä±kan: " + k.cikar());
        System.out.println("Kuyruktan Ã§Ä±kan: " + k.cikar());

        if (k.bosmu()) {
            System.out.println("Kuyruk boÅŸ!");
        }
    }
}

// ğŸ”¹ Kuyruk (Queue) sÄ±nÄ±fÄ±
class Kuyruk {
    private static final int N = 10; // Kuyruk kapasitesi
    private int[] K = new int[N];
    private int on;
    private int arka;
    private int elemanSayisi;

    // Constructor(YapÄ±cÄ±) Metod (Class ismiyle aynÄ± olduÄŸuna dikkat edin)
    public Kuyruk() {
        on = arka = elemanSayisi = 0;
    }

    public boolean bosmu() {
        return elemanSayisi == 0;
    }

    public boolean dolumu() {
        return elemanSayisi == N;
    }

    public void ekle(int yeni) {
        if (dolumu()) {
            System.out.println("Kuyruk dolu!");
            return;
        }

        K[arka] = yeni;
        arka++;
        if (arka == N) arka = 0; // Ã‡evrimsel Kuyruk.(Arka gÃ¶stericisi son elemana geldiÄŸinde en baÅŸa dÃ¶nÃ¼p 0.index'i gÃ¶sterecek ve oraya eleman ekleyecek.)
        elemanSayisi++;
    }

    public int cikar() {
        if (bosmu()) {
            System.out.println("Kuyruk boÅŸ!");
            return -1;
        }

        int veri = K[on];
        on++;
        if (on == N) on = 0;  
        elemanSayisi--;
        return veri;  // Burada eÄŸer return'den sonra on++ deseydik on iÅŸaretÃ§isinin index'i artmayacak dolayÄ±sÄ±yla bir sonraki elemanÄ± gÃ¶stermeyecektir. 
                      // Ã§Ã¼nkÃ¼ derleyici return'Ã¼ gÃ¶rdÃ¼ÄŸÃ¼ anda programdan Ã§Ä±kar ve return'den sonra gelen hiÃ§bir iÅŸlemi yapmaz. O yÃ¼zden buraya dikkat edilmesi gerekir!!!
    }
}
